<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="imp-conjoin-comprehension5" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Code Comprehension</title>

<activity label= "imp-conjoin-comprehensionRoboticCompetition"> 
  <statement>
    <p>
      Look at the first code block, which of the following options have the same functionality as it (i.e., they produce the same output for the same inputs)? You can check the Hint for some input examples.
    </p>
    <program language="java">
      <input>
public static void canJoinRoboticsCompetition(boolean hasBuiltRobot, boolean passedSafetyTest, boolean registeredOnTime) {
    if (hasBuiltRobot) {
        if (passedSafetyTest) {
            if (registeredOnTime) {
                System.out.println("Eligible to join the competition!");
            } else {
                System.out.println("Not eligible.");
            }
        } else {
            System.out.println("Not eligible.");
        }
    } else {
        System.out.println("Not eligible.");
    }
}

      </input>  
    </program>
    
    <p>
      <hint>
      <p>
      Hint: You can use the following test cases to compare the functionality of the code blocks. 
      </p>
        <ul>
		  <li><c>canJoinRoboticsCompetition(true, true,true)</c></li>
		  <li><c>canJoinRoboticsCompetition(true, true, false)</c></li>
		  <li><c>canJoinRoboticsCompetition(true, false, true)</c></li>
		  <li><c>canJoinRoboticsCompetition(true, false, false)</c></li>
		  <li><c>canJoinRoboticsCompetition(false, true,true)</c></li>
		  <li><c>canJoinRoboticsCompetition(false, true, false)</c></li>
		  <li><c>canJoinRoboticsCompetition(false, false, true)</c></li>
		  <li><c>canJoinRoboticsCompetition(false, false, false)</c></li>

		</ul>
      </hint>
    </p>
  </statement>
  
  <statement>
  	<p>
      Select all that apply. 
    </p> 
  </statement>


  <choices>
  
    <choice correct="no">
      <statement> 
       <program language="java">
          <input>
public static void canJoinRoboticsCompetition(boolean hasBuiltRobot, boolean passedSafetyTest, boolean registeredOnTime) {
   if (!hasBuiltRobot) { 
      System.out.println("Not eligible.");
   } 
   if (!passedSafetyTest) {
      System.out.println("Not eligible.");
   }
   if (!registeredOnTime) {
      System.out.println("Not eligible.");
   } else {
      System.out.println("Eligible to join the competition!");
   }
}
          </input>
        </program>
      </statement>
      <feedback>
        <p>
Code block in option A does not alway have the same functionality as the first code block! Compare their outputs using canJoinRoboticsCompetition(false,false,false)
        </p>
      </feedback>
    </choice>

    <choice correct="yes">
      <statement> 
       <program language="java">
          <input>
public static void canJoinRoboticsCompetition(boolean hasBuiltRobot, boolean passedSafetyTest, boolean registeredOnTime) {
   if (hasBuiltRobot &amp;&amp; passedSafetyTest &amp;&amp; registeredOnTime) {
      System.out.println("Eligible to join the competition!");
   } else {
      System.out.println("Not eligible.");
   }
}
          </input>
        </program>
      </statement>
      <feedback>
        <p>
            Correct!
        </p>
      </feedback>
    </choice>

    <choice correct="no">
      <statement> 
       <program language="java">
          <input>
public static void canJoinRoboticsCompetition(boolean hasBuiltRobot, boolean passedSafetyTest, boolean registeredOnTime) {
   if (hasBuiltRobot &amp;&amp; passedSafetyTest &amp;&amp; registeredOnTime) {
      System.out.println("Eligible to join the competition!");
   }
   System.out.println("Not eligible.");
}

          </input>
        </program>
      </statement>
      <feedback>
        <p>
            Code block in option C does not always have the same functionality as the first code block! Compare the outputs using canJoinRoboticsCompetition(true,true,true)
        </p>
      </feedback>
    </choice>

    <choice correct="yes">
      <statement> 
       <program language="java">
          <input>
       <![CDATA[
public static void canJoinRoboticsCompetition(boolean hasBuiltRobot, boolean passedSafetyTest, boolean registeredOnTime) {
   if (!hasBuiltRobot) { 
      System.out.println("Not eligible.");
   } else if (!passedSafetyTest) {
      System.out.println("Not eligible.");
   } else if (!registeredOnTime) {
      System.out.println("Not eligible.");
   } else {
      System.out.println("Eligible to join the competition!");
   }
} 
        ]]>
          </input>
        </program>
      </statement>
      <feedback>
        <p>
            Correct!
        </p>
      </feedback>
    </choice>
    
    <choice correct="no">
      <statement>
        <program language="java">
          <input>
public static void canJoinRoboticsCompetition(boolean hasBuiltRobot, boolean passedSafetyTest, boolean registeredOnTime) {
    if (hasBuiltRobot) {
        if (passedSafetyTest) {
            if (registeredOnTime) {
                System.out.println("Eligible to join the competition!");
            }
        }
    } else {
        System.out.println("Not eligible.");
    }
}
          </input>
        </program>
      </statement>
      <feedback>
        <p>
         Code block in option E does not always have the same functionality as the first code block! Compare the outputs for canJoinRoboticsCompetition(true,false,true);
        </p>
      </feedback>
    </choice>
  </choices>
</activity>
</section>
