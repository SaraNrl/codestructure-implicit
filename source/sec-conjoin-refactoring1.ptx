<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="imp-conjoin-refactoring1" xmlns:xi="http://www.w3.org/2001/XInclude" label="DiscountChecker">
  <title>Code Refactoring</title>

 <activity label = "imp-conjoin-refactoringDiscountChecker">
  <statement>
    <p>
      There is a copy of the following code block in an interactive mode that you can modify and compile. Your task is to improve the code's style as an expert would view it, while ensuring its behavior remains unchanged. You may run your refactored code to verify that it still passes all test cases. 
    </p>
      <program language="java">
        <input>
        public class DiscountChecker {
          public static String determineDiscountEligibility(int age, int membershipYears) {
            if (age > 18) { 
              if (membershipYears >= 5) {
                return "Eligible";
              }	
            }  
            return "Not eligible";
          }
        }
        </input>
      </program>
    </statement>
    
   
    <program label="imp-conjoin-refactoringDiscountChecker-code" interactive="activecode" language="java" >
      <input>
        public class DiscountChecker {
          public static String determineDiscountEligibility(int age, int membershipYears) {
            if (age > 18) { 
              if (membershipYears >= 5) {
                return "Eligible";
              }
            }  
            return "Not eligible";
          }
        }
      </input>

      <tests>
        import static org.junit.Assert.*;
        import org.junit.Test;
        import java.io.*;

        public class RunestoneTests extends CodeTestHelper {

          public RunestoneTests() {
              super("DiscountChecker");
          }

          // Test for Eligible case
          @Test
          public void testEligible() throws IOException {
              Object[] args = {20, 6};  // Arguments for the method
              String output = getMethodOutput("determineDiscountEligibility", args);
              String expect = "Eligible";
              
              boolean passed = getResults(expect, output, "determineDiscountEligibility(20, 6)");
              assertTrue(passed);
          }

          // Test for Not eligible due to age
          @Test
          public void testNotEligibleDueToAge() throws IOException {
              Object[] args = {17, 6};  // Arguments for the method
              String output = getMethodOutput("determineDiscountEligibility", args);
              String expect = "Not eligible";
              
              boolean passed = getResults(expect, output, "determineDiscountEligibility(17, 6)");
              assertTrue(passed);
          }

          // Test for Not eligible due to membership years
          @Test
          public void testNotEligibleDueToMembershipYears() throws IOException {
              Object[] args = {25, 3};  // Arguments for the method
              String output = getMethodOutput("determineDiscountEligibility", args);
              String expect = "Not eligible";
              
              boolean passed = getResults(expect, output, "determineDiscountEligibility(25, 3)");
              assertTrue(passed);
          }

          // Test for Not eligible due to both conditions
          @Test
          public void testNotEligibleForBoth() throws IOException {
              Object[] args = {16, 2};  // Arguments for the method
              String output = getMethodOutput("determineDiscountEligibility", args);
              String expect = "Not eligible";
              
              boolean passed = getResults(expect, output, "determineDiscountEligibility(16, 2)");
              assertTrue(passed);
          }
        }
      </tests>
    </program>
  </activity>
  
  
   <activity  label="imp-conjoin-refactoringDiscountChecker-response">
    <statement>
      <p>
        Which of the following code blocks is the most similar to your final refactored code for the previous question?
      </p>
    </statement>
    
    
    
    
     <choices>
    <choice correct="yes">
      <statement> 
       <program language="java">
          <input>
public class DiscountChecker {
   public static String determineDiscountEligibility(int age, int membershipYears) {
      if (age > 18 &amp;&amp; membershipYears >= 5) {
            return "Eligible";	
      }  
      return "Not eligible";
   }
} 
          </input>
        </program>
      </statement>
      <feedback>
        <p>
            You refactored correctly!
        </p>
      </feedback>
    </choice>
   
   <choice correct="no">
      <statement> 
       <program language="java">
          <input>
public class DiscountChecker {
   public static String determineDiscountEligibility(int age, int membershipYears) {
      if (age > 18 || membershipYears >= 5) {
            return "Eligible";	
      }  
      return "Not eligible";
   }
} 
          </input>
        </program>
      </statement>
      <feedback>
        <p>
            The code doesn't have the same functionality with the original one. 
        </p>
      </feedback>
    </choice>
   
   <choice correct="yes">
      <statement> 
       <program language="java">
          <input>
public class DiscountChecker {
   public static String determineDiscountEligibility(int age, int membershipYears) {
      if (age &lt;= 18 || membershipYears &lt; 5) {
            return "Not eligible";	
      }  
      return "Eligible";
   }
} 
          </input>
        </program>
      </statement>
      <feedback>
        <p>
            You refactored correctly!
        </p>
      </feedback>
    </choice>
    
    </choices>
   
  </activity>
</section>

